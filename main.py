# Python code @beducode
 

import base64, codecs
magic = 'from json.encoder import py_encode_basestring
import requests
import json
import time
import sys
import random
import argparse
import colorama
import pathlib
import math
import getpass
import socket
import datetime as dt
import keyboard
import hashlib
import string
import re
import websocket
from websocket import create_connection
from decimal import Decimal, getcontext
from colorama import Fore, Back, Style
from random import randint, uniform
from datetime import datetime, date, timedelta
from datetime import date
from datetime import timedelta
from urllib.request import Request, urlopen
from os import system, name
from inputimeout import inputimeout, TimeoutOccurred
from faunadb import query as q
from faunadb.objects import Ref
from faunadb.client import FaunaClient
from random_user_agent.user_agent import UserAgent
from random_user_agent.params import SoftwareName, OperatingSystem

colorama.init(autoreset=True)

software_names = [SoftwareName.CHROME.value]
operating_systems = [OperatingSystem.WINDOWS.value,
                     OperatingSystem.LINUX.value]

user_agent_rotator = UserAgent(
    software_names=software_names, operating_systems=operating_systems, limit=100
)

# SET BETSET
parser = argparse.ArgumentParser(description="PASINO.COM BOT @beducode")
parser.add_argument(
    "-c", "--betset", default=0, help="Enter Your Betset Number (default: 0)"
)
my_namespace = parser.parse_args()
nobet = int(my_namespace.betset)

# LOAD SETTING
with open("settings.json", "r") as filesetup:
    data = filesetup.read()
ob = json.loads(data)

wsocket = websocket.WebSocket()

# CONFIG WARNAbett
res = Style.RESET_ALL
putih = Style.NORMAL + Fore.WHITE
putih2 = Style.BRIGHT + Fore.WHITE
hitam = Style.NORMAL + Fore.BLACK
hitam2 = Style.BRIGHT + Fore.BLACK
ungu = Style.NORMAL + Fore.MAGENTA
hijau = Style.NORMAL + Fore.GREEN
hijau2 = Style.BRIGHT + Fore.GREEN
merah = Style.NORMAL + Fore.RED
merah2 = Style.BRIGHT + Fore.RED
biru = Style.NORMAL + Fore.BLUE
biru2 = Style.BRIGHT + Fore.BLUE
biru3 = Style.BRIGHT + Fore.LIGHTCYAN_EX
profcolor = Style.BRIGHT + Back.GREEN + Fore.WHITE
rbcolor = Style.NORMAL + Back.YELLOW + Fore.BLACK
losecolor = Style.BRIGHT + Back.RED + Fore.WHITE
rccolor = Style.BRIGHT + Back.WHITE + Fore.BLACK
rcfontcolor = Style.NORMAL + Fore.BLACK
kuning = Style.NORMAL + Fore.YELLOW
kuning2 = Style.BRIGHT + Fore.YELLOW
cyan = Style.NORMAL + Fore.CYAN
cyan2 = Style.BRIGHT + Fore.LIGHTCYAN_EX


c = requests.Session()
proxies = []
trialversion = False
stoponwinactivated = False
CalculatorMode = False
freeversion = False
uuid = ""
baseuuid = ""
regusername = ""
regpassword = ""
regemail = ""
loginuser = ""
loginpass = ""
startbals = 0
setbal = 0
balancedemo = 0
regex = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
client = FaunaClient(secret="fnAEAcAKliACCJH00BfVSH2dPZ0EIMPWHlMCTbEX")
user_agent = user_agent_rotator.get_random_user_agent()

header = {
    "content-type": "application/json",
    "user-agent": str(user_agent),
    "Upgrade": "websocket",
    "Connection": "Upgrade"
}

# KEYBOARD SHORTCUT
stoponwinkey = "ctrl+shift+w"

if (ob["Account"]["CalculatorMode"] == "ON" or ob["Account"]["CalculatorMode"]  == "on" or ob["Account"]["CalculatorMode"]  == "On"):
    CalculatorMode =  True
else:
    pass
    


def stoponwin_triger():
    global stoponwinactivated
    stoponwinactivated = True


# BANNER
def banner():
    banner = "\n\n"
    banner = banner + biru3 + " ▄▄▄· ▄▄▄· .▄▄ · ▪   ▐ ▄         ▄▄·       • ▌ ▄ ·. \n"
    banner = banner + "▐█ ▄█▐█ ▀█ ▐█ ▀. ██ •█▌▐█▪      ▐█ ▌▪▪     ·██ ▐███▪  \n"
    banner = banner + " ██▀·▄█▀▀█ ▄▀▀▀█▄▐█·▐█▐▐▌ ▄█▀▄  ██ ▄▄ ▄█▀▄ ▐█ ▌▐▌▐█·" + biru2 + "▪\n"
    banner = banner + "▐█▪·•▐█ ▪▐▌▐█▄▪▐█▐█▌██▐█▌▐█▌.▐▌ ▐███▌▐█▌.▐▌██ ██▌▐█▌\n"
    banner = banner + ".▀    ▀  ▀  ▀▀▀▀ ▀▀▀▀▀ █▪ ▀█▄▀▪▀·▀▀▀  ▀█▄▀▪▀▀  █▪▀▀▀ \n"
    banner = banner + "\n"

    banner = banner + putih2 + "Author      : "
    banner = banner + biru2 + "github@beducode\n"
    banner = banner + putih2 + "Contact     : "
    banner = banner + biru2 + "@beduplay | @riosuyanto \n"
    banner = banner + putih2 + "Version     : "
    banner = banner + biru2 + "v.1.5.3\n" + res
    print(banner)


def timeprocess(sec):
    minutes, seconds = divmod(sec, 60)
    hours, minutes = divmod(minutes, 60)
    days, hours = divmod(hours, 24)
    stopwatchx = (days, hours, minutes, seconds)

    return stopwatchx


# CLEAN PAGE
def clear():

    # WINDOWS
    if name == "nt":
        _ = system("cls")

    # MAC / LINUX
    else:
        _ = system("clear")


# FORMAT DECIMAL 8 DIGIT
def rev(num):
    if len(num) < 8:
        panjang_nol = int(8 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    if len(num) == 8:
        panjang_nol = int(8 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    else:
        len_num = len(num)
        end = num[-8:]
        first = num[: len_num - 8]
        result = first + "." + end
    return result

# FORMAT DECIMAL 8 DIGIT
def revminbal(num):
    if len(num) < 8:
        panjang_nol = int(8 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    if len(num) == 8:
        panjang_nol = int(8 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    else:
        len_num = len(num)
        end = num[-8:]
        first = num[: len_num - 8]
        result = first
    return result


# FORMAT DECIMAL 5 DIGIT
def revmulti(num):
    if len(num) < 5:
        panjang_nol = int(5 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    if len(num) == 8:
        panjang_nol = int(5 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    else:
        len_num = len(num)
        end = num[-5:]
        first = num[: len_num - 5]
        result = first + "." + end
    return result


# FORMAT DECIMAL 10 DIGIT
def revwolf(num):
    if len(num) < 10:
        panjang_nol = int(10 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    if len(num) == 10:
        panjang_nol = int(10 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    else:
        len_num = len(num)
        end = num[-10:]
        first = num[: len_num - 10]
        result = first + "." + end
        tmprs = int(float(result) * (10 ** 10))
        result = first + "." + end
    return result


# FORMAT 11 DIGIT
def revwolfbet(num):
    if len(num) < 11:
        panjang_nol = int(11 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    if len(num) == 11:
        panjang_nol = int(11 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    else:
        len_num = len(num)
        end = num[-11:]
        first = num[: len_num - 11]
        result = first + "." + end
        tmprs = int(float(result) * (10 ** 11))
        result = first + "." + end
    return result


# REFRESH PAGE
def refresh_page():
    clear()
    banner()


# API INDODAX FOR GET LAST PRICE
def indodax(coin):
    try:
        pair = (coin).lower() + "_idr"

        url = "https://indodax.com/api/" + str(pair) + "/ticker"

        indx = c.get(url)
        jsindx = json.loads(indx.text)
        pricepair = int(jsindx["ticker"]["last"])
    except:
        coinpair = (coin).lower() + "_idr"

        url = "https://beducode-price.herokuapp.com/price/" + str(coinpair)

        price = c.get(url)
        data = json.loads(price.text)
        pricepair = data["last"]

    return pricepair


# FORMAT VALUE TO IDR
def rupiah_format(angka):
    return "Rp " + "{:0,.2f}".format(angka)


# FORMAT VALUE TO USD
def dollar_format(angka):
    return "$ " + "{:0,.2f}".format(angka)


# LIST END POINT
def navigate_api(nav):
    switcher = {
        1: "https://api.pasino.com/api/register",
        2: "https://api.pasino.com/api/login",
        3: "https://api.pasino.com/account/get-socket-token",
        4: "wss://socket.pasino.com/dice/",
        5: "https://api.pasino.com/dice/play",
        6: "https://api.pasino.com/dice/get-seed",
        7: "https://api.pasino.com//deposit/get-deposit-information",
        8: "https://api.pasino.com/account/tfa-challenge"
    }

    return switcher.get(nav, "nothing")

## WS NAVIGATION
def navigate_ws(nav):
    switcher = {
        1: "initialization",
        2: "get_coin_parameters",
        3: "get_balance",
        4: "place_bet",
    }
    
    return switcher.get(nav, "nothing")

def call_api(method, url, hd, dt):
    result = None
    while result is None:
        if method == "GET":
            try:
                # connect
                result = c.get(url, headers=hd, data=dt)
                if result.status_code != 200:
                    time.sleep(2)
                    result = None
                    call_api(method, url, hd, dt)
            except:
                time.sleep(2)
        else:
            try:
                # connect
                result = c.post(url, headers=hd, data=dt)
                if result.status_code != 200:
                    time.sleep(2)
                    result = None
                    call_api(method, url, hd, dt)
            except:
                time.sleep(2)

    return json.loads(result.text)


# VALIDATE RUNNING SCRIPT
## FOR DEV
def remainloseinfo(remainlose):
    refresh_page()
    print(putih2 + "Remain Report!!! " + res)
    print(putih2 + "Remain Lose : " + res + merah2 + rev(str(remainlose)) + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET LOSS
def saveprofit(pf, bl, mb, ls, tp):
    refresh_page()
    print(putih2 + "Saving profit Telah Tercapai!! " + res)
    print(putih2 + "Total Profit : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + rev(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + rev(str(bl)) + ress)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET BET
def cutloss(bl, sb, ls, tp):
    refresh_page()
    ct = sb - bl
    print(putih2 + "Target Bet Telah Tercapai!! " + res)
    print(putih2 + "Loss : " + res + merah2 + rev(str(ct)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + rev(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET LOSS
def targetloss(bl, sb, mb, ls, tp):
    refresh_page()
    tl = bl - sb
    print(putih2 + "Target Loss Telah Tercapai!! " + res)
    print(putih2 + "Total Lose : " + res + merah2 + rev(str(tl)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + rev(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + rev(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET PROFIT
def targetprofit(pf, bl, mb, ls, tp):
    refresh_page()

    print(
        putih2 + "Target Profit Telah Tercapai : " +
        res + hijau2 + rev(str(pf)) + res
    )
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + rev(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + rev(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET BALANCE
def targetbalance(pf, bl, mb, ls, tp):
    clear()
    banner()
    print(
        putih2 + "Target Balance Telah Tercapai : " +
        res + hijau2 + rev(str(pf)) + res
    )
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + rev(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + rev(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# STOP ON WIN
def stoponwin(pf, bl, mb, ls, tp):
    refresh_page()

    print(
        putih2 + "Stop on win aktif, Profit Anda : " +
        res + hijau2 + rev(str(pf)) + res
    )
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + rev(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + rev(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()
    
# STOP ON WIN
def maxls(pf, bl, mb, ls, tp):
    refresh_page()

    print(putih2 + "Maximum Lose Strike aktif, Profit Anda : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + rev(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + rev(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()

# MAXIMUM LEVEL
def maxlevel(pf, bl, mb, ls, tp):
    refresh_page()

    print(putih2 + "Maximum Level Resiko aktif, Profit Anda : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + rev(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + rev(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


## FIBONACCHI CALC
def fibocal(n):
    if n <= 1:
        return n + 1
    else:
        return fibocal(n - 1) + fibocal(n - 2)


## UI RANGE CHANCE
def rangeChance(hc):
    panjangrd = len(str(hc))
    if panjangrd == 3:
        chancerand = " " + str(hc) + "   "
    if panjangrd == 4:
        chancerand = " " + str(hc) + "  "
    if panjangrd == 5:
        chancerand = " " + str(hc) + " "

    return chancerand


## RANDOM CHANCE
def randomChance(min, max):
    hasil_chance = round(random.uniform(float(min), float(max)), 2)

    return hasil_chance


## SETTING CHANCE
def settingChance(LCMin, LCMax):
    if (
        ob["Betset"][nobet]["Random Chance"]["Toggle"] == "ON"
        or ob["Betset"][nobet]["Random Chance"]["Toggle"] == "On"
        or ob["Betset"][nobet]["Random Chance"]["Toggle"] == "on"
    ):

        chanceval = randomChance(LCMin, LCMax)
        chancerand = rangeChance(chanceval)

    else:
        chanceval = float(LCMin)

        chancerand = rangeChance(chanceval)

    return chanceval, chancerand

## PLACE BET GEM
def chancePlacebetdemo(tk, am, cy, rt, py, ch, pf, cs): 
    lenpay = len(pf)
    fixpay = lenpay-5
    pay = pf[0:fixpay]

    databet = {
        "token" : tk,
        "bet_amt" : rev(str(am)),
        "coin" : cy,
        "client_seed" : cs,
        "type" : rt,
        "payout" : py,
        "winning_chance" : str(ch),
        "profit" : pay
    }
    
    placebet = json.dumps(databet)

    url = navigate_api(5)
    betting = call_api("POST", url, header, placebet)
    
    return betting

## PLACE BET
def chancePlacebet(mt, am, cy, rt, py, ch, pf, cs):
    i = 5
    correctflag = 0
    while True:  
        lenpay = len(pf)
        fixpay = lenpay-i
        pay = pf[0:fixpay]

        databet = {
            "method" : mt,
            "bet_amt" : rev(str(am)),
            "coin" : cy,
            "client_seed" : cs,
            "type" : rt,
            "payout" : py,
            "winning_chance" : str(ch),
            "profit" : pay
        }
        
        try:
            wsocket.send(json.dumps(databet))
            result = wsocket.recv()
            if "win" in result:
                betting = json.loads(result) 
                return betting
            else:
                if correctflag <= 2:
                    correctflag += 1
                    i += 1
                else:
                    correctflag += 1
                '
love = ''
god = '   return date_expired 
 
 
# CHECK TRIAL STATUS OR CREATE NEW ACCOUNT TRIAL
def checktrialreg(user):
    try:
        member = client.query(
            q.get(q.match(q.index("wolf_register_trial_by_host"), user))
        )
        status = int(member["data"]["member_status"])
    except:
        createacc = client.query(
            q.create(
                q.collection("scwolf_trial_update"),
                {
                    "data": {
                        "hostname": str(user),
                        "regdate": str(dateregister()),
                        "expdate": str(dateexpired()),
                        "member_status": "1",
                    }
                },
            )
        )

        status = 2

    return status

# NEW REGISTER
def newregister(id, user):
    try:
        createacc = client.query(
            q.create(
                q.collection("scwolf_trialversion_update"),
                {"data": {"uuid": str(id), "login": str(
                    user), "member_status": "1"}},
            )
        )

        status = 2
    except:
        status = 0

    return status

# CHECK EXPIRED DATE
def checkexpired(id, user):
    member = client.query(
        q.get(q.match(q.index("wolf_register_trial_by_id"), id)))

    nowdate = datetime.strptime(str(dateexpired()), "%d/%m/%y %H:%M:%S")
    expdate = datetime.strptime(member["data"]["expdate"], "%d/%m/%y %H:%M:%S")

    datenow = date(
        int(nowdate.strftime("%Y")),
        int(nowdate.strftime("%m")),
        int(nowdate.strftime("%d")),
    )
    dateexp = date(
        int(expdate.strftime("%Y")),
        int(expdate.strftime("%m")),
        int(expdate.strftime("%d")),
    )

    checkexp = (dateexp - datenow).days

    if checkexp < 0:
        status = 3
    else:
        status = 1

    return status

def trialexpired():
    refresh_page()

    print(
        kuning2
        + " "
        + "Account Trial Anda Sudah Expired, Silahkan Hubungi Kontak Untuk Info Lebih Lanjut!"
        + res
    )
    time.sleep(30)
    sys.exit()

# GET RACE INFO TRIAL
def authfreever():
    global uuid

    username = (getpass.getuser()).lower()

    status = checktrialreg(username)

    if status == 2:
        statuscek = newregister(uuid, username)
    else:
        statuscek = checkexpired(uuid, username)

    if statuscek == 1:
        pass
    elif statuscek == 2:
        pass
    else:
        trialexpired()         
    
def dice(tw, ls, tkp, sp):
    no_win = 0
    no_lose = 0
    total_win = 0
    total_lose = 0
    totalprofit = 0
    maxbet = 0
    balbet = 0
    tmpbalbet = 0
    start_time = time.time()
    stats_rolebet_lose = False
    stats_rolebet_win = False
    no_rolebet = 0
    rolebet = " H "
    roleStatus = True
    lvlbet = 0
    global balancedemo

    MC1 = False
    MC2 = False
    condition = ""
    spin = 0
    marketidx = 0
    rsroll = 0
    rollcount = 0
    roll = 0
    amount = 0
    amountbal = 0
    maxlose = 0
    saveprofitsts = False
    loselimitsts = False
    startbet = dt.datetime.today().timestamp()
    
    cy = pilcurr
    
    if CalculatorMode is False:
        methods = navigate_ws(2)
        validate_bet = get_betinfo(methods, cy.upper())

        min_bet = int(float(validate_bet["minimum_bet"]) * (10 ** 8))

    else:
        connectwebsocket()
        methods = navigate_ws(2)
        validate_bet = get_betinfo(methods, cy.upper())

        min_bet = int(float(validate_bet["minimum_bet"]) * (10 ** 8))
        
    if trialversion:
        ## CEK MINIMAL BALANCE
        if (currbalance/10000000) < min_bet:
            validateminbalance(min_bet * 10000000, cy.upper())
    
    ## BALANCE NOT INFLUENCE
    if (currbalance) <= min_bet:
        validatebalance(min_bet, cy.upper())
        

    basebet = int(float(ob["Betset"][nobet]["Base Bet"]) * (10 ** 8))
    if (ob["Betset"][nobet]["Mode1"]["Toggle"] == "ON" or ob["Betset"][nobet]["Mode1"]["Toggle"] == "on" or ob["Betset"][nobet]["Mode1"]["Toggle"] == "On"):      
        minbet = int(float(ob["Betset"][nobet]["Mode1"]["Minbet"]) * (10 ** 8))
        if basebet >= minbet:
            payin = minbet
        else:
            payin = basebet

        profitdiv = int(float(ob["Betset"][nobet]["Mode1"]["Profit"]) * (10 ** 8))
        switchChance = False
        limitChance = False
        MC1Min = ob["Betset"][nobet]["Mode1"]["Multi Win"]["LCMin"]
        MC1Max = ob["Betset"][nobet]["Mode1"]["Multi Win"]["LCMax"]
        MC2Min = ob["Betset"][nobet]["Mode1"]["Multi Lose"]["LCMin"]
        MC2Max = ob["Betset"][nobet]["Mode1"]["Multi Lose"]["LCMax"]
        MC3Min = ob["Betset"][nobet]["Mode1"]["Multi Limit"]["LCMin"]
        MC3Max = ob["Betset"][nobet]["Mode1"]["Multi Limit"]["LCMax"]

        tmplose = 0
        tmpprofit = 0

        amount = payin
        
    elif (ob["Betset"][nobet]["Mode2"]["Toggle"] == "ON" or ob["Betset"][nobet]["Mode2"]["Toggle"] == "on" or ob["Betset"][nobet]["Mode2"]["Toggle"] == "On"):
        profitdiv = int(float(ob["Betset"][nobet]["Mode2"]["Profit"]) * (10 ** 8))
        payin = min_bet
        Gateway = ob["Betset"][nobet]["Mode2"]["GateWay"]
        switchChance = False
        limitChance = False
        MC1Min = ob["Betset"][nobet]["Mode2"]["Multi Win"]["LCMin"]
        MC1Max = ob["Betset"][nobet]["Mode2"]["Multi Win"]["LCMax"]
        MC2Min = ob["Betset"][nobet]["Mode2"]["Multi Lose"]["LCMin"]
        MC2Max = ob["Betset"][nobet]["Mode2"]["Multi Lose"]["LCMax"]
        tmpprofit = 0
        gocount = 0
        tmplose = 0

        fbcount = 0
        amount = payin
        
    elif (ob["Betset"][nobet]["Mode3"]["Toggle"] == "ON" or ob["Betset"][nobet]["Mode3"]["Toggle"] == "on" or ob["Betset"][nobet]["Mode3"]["Toggle"] == "On"):
        switchChance = False
        limitChance = False
        payin = min_bet
        profitdiv = int(float(ob["Betset"][nobet]["Mode3"]["Profit"]) * (10 ** 8))
        Mt1 = float(ob["Betset"][nobet]["Mode3"]["IfLose"])
        Mt2 = float(ob["Betset"][nobet]["Mode3"]["IfWin"])
        RIP = int(ob["Betset"][nobet]["Mode3"]["Reset If Profit"])
        MC1Min = ob["Betset"][nobet]["Mode3"]["Multi Win"]["LCMin"]
        MC1Max = ob["Betset"][nobet]["Mode3"]["Multi Win"]["LCMax"]
        MC2Min = ob["Betset"][nobet]["Mode3"]["Multi Lose"]["LCMin"]
        MC2Max = ob["Betset"][nobet]["Mode3"]["Multi Lose"]["LCMax"]
        tmpprofit = 0
        tmplose = 0
        
        amount = payin
    
    chanceval = randomChance(MC1Min, MC1Max)
    chancerand = rangeChance(chanceval)

    if basebet < min_bet:
        validatebet(min_bet, pilcurr)
    else:
        pass
    
    while True:
        keyboard.add_hotkey(stoponwinkey, stoponwin_triger)
        rsroll += 1
        
        if (ob["Betset"][nobet]["Bet"]["Hi / Low"]["Toggle"] == "On" or ob["Betset"][nobet]["Bet"]["Hi / Low"]["Toggle"] == "ON" or ob["Betset"][nobet]["Bet"]["Hi / Low"]["Toggle"] == "on"):
            no_rolebet += 1
            if stats_rolebet_win is True:
                if (
                    no_rolebet
                    > int(ob["Betset"][nobet]["Bet"]["Hi / Low"]["If Win"]) - 1
                ):
                    rolebet = " L "
                    roleStatus = False
                if (
                    no_rolebet
                    > int(ob["Betset"][nobet]["Bet"]["Hi / Low"]["If Win"]) * 2 - 1
                ):
                    rolebet = " H "
                    roleStatus = True
                    no_rolebet = 0
            if stats_rolebet_lose is True:
                if (
                    no_rolebet
                    > int(ob["Betset"][nobet]["Bet"]["Hi / Low"]["If Lose"]) - 1
                ):
                    rolebet = " L "
                    roleStatus = False
                if (
                    no_rolebet
                    > int(ob["Betset"][nobet]["Bet"]["Hi / Low"]["If Lose"]) * 2 - 1
                ):
                    rolebet = " H "
                    roleStatus = True
                    no_rolebet = 0
        else:
            rolebet = ob["Betset"][nobet]["Bet"]["Bet"]
            if (
                rolebet == "HI"
                or rolebet == "hi"
                or rolebet == "Hi"
                or rolebet == "High"
                or rolebet == "HIGH"
                or rolebet == "high"
            ):
                rolebet = " H "
                roleStatus = True
            elif (
                rolebet == "LO"
                or rolebet == "lo"
                or rolebet == "Lo"
                or rolebet == "Low"
                or rolebet == "LOW"
                or rolebet == "low"
            ):
                rolebet = " L "
                roleStatus = False
            else:
                refresh_page()
                print(
                    "Terjadi kesalahan pada settings.json, silahkan cek kembali file settings anda"
                )
                time.sleep(5)
                sys.exit()
        
        if switchChance is False:
            MC1 = True
            MC2 = False
        else:
            MC1 = False
            MC2 = True

        # CHANCE SETTINGS
        if MC1 is True:
            LCMin = MC1Min
            LCMax = MC1Max
            MC2 = False
            chanceval, chancerand = settingChance(LCMin, LCMax)
        elif MC2 is True:
            if limitChance is True:
                LCMin = MC3Min
                LCMax = MC3Max
            else:
                LCMin = MC2Min
                LCMax = MC2Max

            MC1 = False
            chanceval, chancerand = settingChance(LCMin, LCMax)
        else:
            if (ob["Betset"][nobet]["Random Chance"]["Toggle"] == "ON" or ob["Betset"][nobet]["Random Chance"]["Toggle"] == "On" or ob["Betset"][nobet]["Random Chance"]["Toggle"] == "on"):
                LCMin = ob["Betset"][nobet]["Random Chance"]["Min"]
                LCMax = ob["Betset"][nobet]["Random Chance"]["Max"]
                chanceval, chancerand = settingChance(LCMin, LCMax)
            else:
                LCMin = ob["Betset"][nobet]["Chance"]
                LCMax = 0
                chanceval, chancerand = settingChance(LCMin, LCMax)
        
        
        if totalprofit > 0 and int(ob["MaxLS"]) > 0:
            if no_lose >= int(ob["MaxLS"]):
                tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                maxls(totalprofit, amountbal, maxbet, total_lose, tp)
        
        if (ob["Show Price"] == "ON" or ob["Show Price"] == "On" or ob["Show Price"] == "on"):
            if spin == 0:
                marketidx = indodax(cy)

            spin += 1

            if spin == 10000:
                marketidx = indodax(cy)
                spin = 1

        current_time = time.time()
        elapsed_time = current_time - start_time
        
        if roleStatus is True:
            condition = 2
            rolebet = " H "
        else:
            condition = 1
            rolebet = " L "
        
        v_odds = revmulti(str(int(float(95 / chanceval) * (10 ** 5))))
        randomseed = hashlib.md5(getpass.getuser().encode())
        client_seed = randomseed.hexdigest()

        cal_profit = "{:.13f}".format(float((Decimal(rev(str(amount))) * Decimal(v_odds)) - Decimal(rev(str(amount)))))
        win_profit =  str(cal_profit)
        
        ## LOSE LIMIT
        if loselimitsts:
            calloselimit = amountbal - amount
            if calloselimit <= targetloseval:
                # LOSE TARGET
                bl = amountbal
                tl = targetloseval
                tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                targetloss(tl, bl, maxbet, total_lose, tp)
        
        ## SAVE PROFIT
        if saveprofitsts:
            calsaveprofit = amountbal - amount
            if calsaveprofit <= saveprof:
                tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                saveprofit(totalprofit, amountbal, maxbet, total_lose, tp)
            else:
                pass
            
        if CalculatorMode:
            if amount > balancedemo:
                    tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                    balancecaldemo(currbalance, maxbet, total_lose, tp, balancedemo)
        else:
            if amountbal > 0:
                if amountbal < amount:
                    tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                    balancetidakcukup(amountbal, maxbet, total_lose, tp)

        if CalculatorMode is False:
            if (ob["Account"]["GEMMode"] == "ON" or ob["Account"]["GEMMode"]  == "on" or ob["Account"]["GEMMode"]  == "On"):
                betting = chancePlacebetdemo(token, amount, cy.upper(), condition, v_odds, chanceval, win_profit, client_seed)
            else:
                methods = navigate_ws(4)
                betting = chancePlacebet(methods, amount, cy.upper(), condition, v_odds, chanceval, win_profit, client_seed)
        else:
            pass
        
        
        if CalculatorMode:
            profit = 0
            state = "lose"                                                                                                                                                                                                                                               
            amountbal = 0
            
            if amount > maxbet:
                maxbet = amount
        else:
            profit = betting["profit"]
            state = betting["win"]
            amountbal = int(float(betting["balance"]) * (10 ** 8))
        
        bal = amount
        losstarget = int(float(ob["Lose Target"]) * (10 ** 8))
        calctarget = startbals - losstarget
            
        if totalprofit >= tkp:
            tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
            targetprofit(totalprofit, amountbal,maxbet, total_lose, tp)

        if amountbal >= tw:
            tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
            targetbalance(totalprofit, amountbal, maxbet, total_lose, tp)
        
            
        if ls > 0:
            targetloseval = currbalance - ls
            loselimitsts = True
        else:
            targetloseval = 0
            
        if sp > 0:
            saveprof = currbalance + sp
            if totalprofit >= sp:
                saveprofitsts = True
                
        if (ob["Betset"][nobet]["Mode1"]["Toggle"] == "ON" or ob["Betset"][nobet]["Mode1"]["Toggle"] == "on" or ob["Betset"][nobet]["Mode1"]["Toggle"] == "On"):    
            if state == 1:
                no_win += 1
                no_lose = 0
                totalprofit = totalprofit + int(float(profit) * (10 ** 8))
                wdbalance = float(int(amountbal)) / (10 ** 8)
                lastprice = marketidx
                wd = rupiah_format(lastprice * wdbalance)
                balbet = balbet + bal
                balcal = amountbal

                if amount > maxbet:
                    maxbet = amount

                if balbet > tmpbalbet:
                    tmpbalbet = balbet
                    balbet = 0
                else:
                    tmpbalbet = tmpbalbet
                    balbet = 0

                if totalprofit > tmpprofit:                        
                    if stoponwinactivated is True:
                        tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                        stoponwin(totalprofit, amountbal, maxbet, total_lose, tp)

                if totalprofit > 0:
                    print(
                        rccolor + rcfontcolor + chancerand + res + profcolor + putih2 + str(rolebet) + res + " " + hijau2 + "+" + rev(str(bal)) + res + biru2
                        + " Balance" + res + " : " + rev(str(balcal)) + res + hijau2 + " Profit" + res + " : " + rev(str(totalprofit)) 
                        + res + merah2 + " MaxLose" + res + " : " + rev(str(maxlose))
                        + res + kuning2 + " Wallet"
                        + res + " : " + str(wd) + res
                    )
                else:
                    print(
                        rccolor + rcfontcolor + chancerand + res + profcolor + putih2 + str(rolebet) + res + " " + hijau2 + "+" + rev(str(bal)) + res + biru2
                        + " Balance" + res + " : " + rev(str(balcal)) + res + hijau2 + " Profit" + res + " : " + rev(str(totalprofit)) 
                        + res + merah2 + " MaxLose" + res + " : " + rev(str(maxlose))
                        + res + kuning2 + " Wallet"
                        + res + " : " + str(wd) + res
                    )
                    
                if maxlose > tmplose:
                    maxlose = maxlose
                else:
                    maxlose = tmplose

                # BET SETTING
                switchChance = False
                limitChance = False
                if totalprofit >= (tmpprofit + profitdiv):
                    tmplose = 0
                    tmpprofit = totalprofit
                    amount = payin
                else:
                    tmplose = 0
                    amount = payin

            else:
                no_lose += 1
                no_win = 0
                totalprofit = totalprofit + int(f'
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
